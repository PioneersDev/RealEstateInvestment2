@model RealEstateInvestment.Areas.RealEstate.Models.DTO.ProjectDTO
@{
    Layout = null;
}
<div class="panel panel-primary">
    <div class="panel-heading">
        @if (Model != null && Model.Id > 0)
        {
            @:تعديل بيانات مشروع
        }
        else
        {
            @:اضافة مشروع جديد
        }
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("SaveProject", "Projects", FormMethod.Post, new { id = "popupForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (Model != null && Model.Id > 0)
                {
                    @Html.HiddenFor(model => model.Id)
                }
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" class="active pull-right"><a href="#Project" aria-controls="Project" role="tab" data-toggle="tab">بيانات المشروع</a></li>
                    <li role="presentation" class="pull-right"><a href="#Owner" aria-controls="Owner" role="tab" data-toggle="tab">بيانات المالك</a></li>
                </ul>
                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane active" id="Project">

                        <div class="form-group" style="margin-top: 10px;">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ProjectDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProjectDescription, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.ProjectDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ProjectContentDetails, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProjectContentDetails, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.ProjectContentDetails, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TransmissionDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TransmissionDate, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.TransmissionDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.DropDownList("CountryId", ViewBag.Countries as SelectList, "اختر الدولة....", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.DropDownList("CityId", ViewBag.Cities as SelectList, "اختر المدينة....", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.DropDownList("DistrictId", ViewBag.Districts as SelectList, "اختر المركز....", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DocHeaderId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DocHeaderId, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.DocHeaderId, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                    </div>
                    <div role="tabpanel" class="tab-pane" id="Owner">

                        <div class="form-group" style="margin-top: 10px;">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.ProjectOwnerId, ViewBag.Owners as SelectList, string.Empty, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProjectOwnerId, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.ProjectOwnerId, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ProjectOwnerDelegateName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProjectOwnerDelegateName, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.ProjectOwnerDelegateName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ProjectOwnerDelegateRepresent, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProjectOwnerDelegateRepresent, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.ProjectOwnerDelegateRepresent, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ProjectOwnerDetails, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProjectOwnerDetails, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.ProjectOwnerDetails, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsMainOwner)
                                    @Html.ValidationMessageFor(model => model.IsMainOwner, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @Html.LabelFor(model => model.IsMainOwner, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-group" id="MainOwnerIdDiv">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.MainOwnerId, ViewBag.Owners as SelectList, string.Empty, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MainOwnerId, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.MainOwnerId, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="حفظ" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<script>
    $(function () {
        $("#popupForm").validate().settings.ignore = "";

        // في حالة ال edit
        @if (Model != null)
        {
            if (Model.Id> 0)
            {
                if (Model.IsMainOwner== true)
                {
                    @:$('#MainOwnerIdDiv').hide();
                }
            }
        }

        $('.datepicker').datepicker({
            format: "dd/mm/yyyy",
            orientation: "bottom right"
        });
        $('#CountryId').change(function () {
            debugger;
            var selectedVal = this.value;
            if (selectedVal != '') {
                $.get('/RealEstate/Locations/GetCities/' + selectedVal + '', function (response) {
                    $('#CityId').empty().append('<option>اختر المدينة....</option>');
                    $('#DistrictId').empty().append('<option>اختر المركز....</option>');
                    $.each(response.data, function (index, element) {
                        $('#CityId').append('<option value=' + element.Id + '>' + element.CityName + '</option>');
                    });
                });
            } else {
                $('#CityId').empty().append('<option>اختر المدينة....</option>');
                $('#DistrictId').empty().append('<option>اختر المركز....</option>');
            }
        });
        $('#CityId').change(function () {
            var selectedVal = this.value;
            if (selectedVal != '') {
                $.get('/RealEstate/Locations/GetDistricts/' + selectedVal + '', function (response) {
                    $('#DistrictId').empty().append('<option>اختر المركز....</option>');
                    $.each(response.data, function (index, element) {
                        $('#DistrictId').append('<option value=' + element.Id + '>' + element.DistrictName + '</option>');
                    });
                });
            } else {
                $('#DistrictId').empty().append('<option>اختر المركز....</option>');
            }
        });
        $('#IsMainOwner').change(function () {
            debugger;
            var val = this.checked;
            if (val) {
                $('#MainOwnerId').val('');
                $('#MainOwnerIdDiv').hide();
            } else{
                $('#MainOwnerId').val('');
                $('#MainOwnerIdDiv').show();
            }
        });
    });
</script>
